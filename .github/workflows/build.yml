name: Build Electron Forge

on:
  push:
    branches:
    # this will run on the electron branch
      - main

jobs:

  build:
    name: Build Electron Forge
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [macos-latest, ubuntu-latest, windows-latest]
        os: [ubuntu-latest]

    steps:
      - name: Clone main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Setup NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Install dependencies
        working-directory: ./desktop
        run: npm install

      # - name: Build
      #   working-directory: ./desktop
      #   run: npm run make

      # - name: Upload artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: "Build for ${{ matrix.os }} - version ${{ matrix.version }}"
      #     path: desktop/out/

      # - name: Upload builds to release
      #   uses: softprops/action-gh-release@main
      #   with:
      #     tag_name: ${{ github.ref }}
      #     files: out/*.*
      #     draft: true
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Upload Nightly Build
      #   uses: actions/upload-artifact@main
      #   if: success()
      #   with:
      #     name: Electron Forge-nightly
      #     path: out/**/*!(.zip)

      # - name: Release
      #   if: matrix.os == 'ubuntu-latest'
      #   working-directory: ./desktop
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: npx semantic-release

      - name: Build Changelog
        if: matrix.os == 'ubuntu-latest'
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          path: ./desktop
          mode: "HYBRID"
          # outputFile: "CHANGELOG.json"
          # configurationJson: |
          #   {
          #     "template": "#{{CHANGELOG}}",
          #     "categories": [
          #       {
          #           "title": "## Feature",
          #           "labels": ["feat", "feature"]
          #       },
          #       {
          #           "title": "## Fix",
          #           "labels": ["fix", "bug"]
          #       },
          #       {
          #           "title": "## Other",
          #           "labels": []
          #       }
          #     ],
          #     "label_extractor": [
          #       {
          #         "pattern": "^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test){1}(\\([\\w\\-\\.]+\\))?(!)?: ([\\w ])+([\\s\\S]*)",
          #         "on_property": "title",
          #         "target": "$1"
          #       }
          #     ]
          #   }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
